// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    // Build configuration
    ext.buildConfig = [
        minSdk     : 19,
        compileSdk : 28,
        targetSdk  : 28,
        versionCode: 1,
        versionName: '1.0'
    ]

    // Dependency versions
    ext.versions = [
        agp         : '3.5.0',
        spotless    : '3.20.0',
        ktlint      : '0.31.0',
        gvp         : '0.20.0',
        kotlin      : '1.3.50',
        appcompat   : '1.0.2',
        fragment    : '1.1.0-alpha05',
        lifecycle   : '2.0.0',
        recyclerView: '1.0.0',
        material    : '1.0.0',
        glide       : '4.9.0',
        dagger      : '2.21',
        kotterknife : '0.1.0-SNAPSHOT',
        timber      : '4.7.1',
        rxKotlin    : '2.3.0',
        rxAndroid   : '2.1.1',
        retrofit    : '2.5.0',
        okhttp      : '3.12.2',
        room        : '2.1.0-alpha06',
        junit       : '4.12',
        mockito     : '2.0.0',
        testRules   : '1.1.1',
        testRunner  : '1.1.1',
        testCore    : '1.1.0',
        espresso    : '3.1.1',
        rxidler     : '0.9.1',
        okreplay    : '1.5.0'
    ]

    // Dependencies
    ext.deps = [
        kotlin      : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
        appcompat   : "androidx.appcompat:appcompat:${versions.appcompat}",
        fragment    : "androidx.fragment:fragment-ktx:$versions.fragment",
        viewModel   : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle",
        recyclerView: "androidx.recyclerview:recyclerview:${versions.recyclerView}",
        material    : "com.google.android.material:material:$versions.material",
        glide       : "com.github.bumptech.glide:glide:$versions.glide",
        kotterKnife : "com.jakewharton:kotterknife:${versions.kotterknife}",
        timber      : "com.jakewharton.timber:timber:${versions.timber}",

        rx          : [
            kotlin : "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}",
            android: "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}",
        ],

        retrofit    : [
            runtime      : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
            gsonConverter: "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
            logging      : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
        ],

        'room'      : [
            'runtime' : "androidx.room:room-runtime:$versions.room",
            'compiler': "androidx.room:room-compiler:$versions.room",
            'rx'      : "androidx.room:room-rxjava2:$versions.room"
        ],

        dagger      : [
            runtime        : "com.google.dagger:dagger:${versions.dagger}",
            androidRuntime : "com.google.dagger:dagger-android-support:${versions.dagger}",
            compiler       : "com.google.dagger:dagger-compiler:${versions.dagger}",
            androidCompiler: "com.google.dagger:dagger-android-processor:${versions.dagger}",
        ],

        test        : [
            junit     : "junit:junit:$versions.junit",
            mockito   : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito",
            okreplay  : "com.airbnb.okreplay:espresso:$versions.okreplay",
            rules     : "com.android.support.test:rules:$versions.rules",
            runner    : "com.android.support.test:runner:$versions.runner",
            core      : "androidx.test:core:$versions.testCore",
            lifecycle : "androidx.arch.core:core-testing:$versions.lifecycle",

            espresso  : [
                core   : "androidx.test.espresso:espresso-core:$versions.espresso",
                rxidler: "com.squareup.rx.idler:rx2-idler:$versions.rxidler",
            ]
        ],

        plugins     : [
            agp     : "com.android.tools.build:gradle:$versions.agp",
            kotlin  : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
            spotless: "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotless",
            gvp     : "com.github.ben-manes:gradle-versions-plugin:$versions.gvp",
            okreplay: "com.airbnb.okreplay:gradle-plugin:$versions.okreplay"
        ]
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath deps.plugins.agp
        classpath deps.plugins.kotlin
        classpath deps.plugins.spotless
        classpath deps.plugins.gvp
        classpath deps.plugins.okreplay
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        jcenter()
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: "com.github.ben-manes.versions"

    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(versions.ktlint)
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
